
externalName:
  enabled: true

externalSecret:
  enabled: true

adminClusterRoleBinding:
  enabled: true

jenkins:
  controller:
    jenkinsAdminEmail: huttersebastian@gmail.com
    jenkinsUrlProtocol: https
    agentListenerServiceType: "NodePort"
    installPlugins:
    # kubernetes is broken https://issues.jenkins.io/browse/JENKINS-70639
    - kubernetes:3883.v4d70a_a_a_df034
    - kubernetes-client-api:6.4.1-208.vfe09a_9362c2c
    - ssh-agent
    - ssh-slaves
    - workflow-aggregator
    - git
    - configuration-as-code
    - job-dsl
    additionalPlugins:
    - oic-auth
    - dotnet-sdk
    - kubernetes-credentials-provider
    - matrix-auth
    - github
    - aws-secrets-manager-credentials-provider
    - ansible
    # no secret source config, instead for jcasc i use kubernetes secrets
    #- aws-secrets-manager-secret-source
    - blueocean
    javaOpts: "-Xms3072m -Xmx3072m -XX:+UseG1GC -XX:+UseStringDeduplication -XX:MaxHeapFreeRatio=70 -XX:MinHeapFreeRatio=40"
    additionalExistingSecrets:
    # auth0 secrets are used in JCaSC configuration
    - name: jenkins-auth0-client
      keyName: clientId
    - name: jenkins-auth0-client
      keyName: clientSecret
    # extra env vars are used for aws secret source configuration
    # the aws secret manager configuration is us
    containerEnv:
    - name: AWS_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: jenkins-iam-secrets-manager
          key: accessKeyId
    - name: AWS_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: jenkins-iam-secrets-manager
          key: secretAccessKey
    - name: AWS_DEFAULT_REGION
      valueFrom:
        secretKeyRef:
          name: jenkins-iam-secrets-manager
          key: defaultRegion
    JCasC:
      configScripts:
        tool-configuration: |-
          tool:
            git:
              installations:
              - home: "git"
                name: "Default"
            mavenGlobalConfig:
              globalSettingsProvider: "standard"
              settingsProvider: "standard"
        unclassified-configuration: |-
          unclassified:
            awsCredentialsProvider:
              cache: true
              client:
                credentialsProvider: "default"
                region: "eu-central-1"
        casc-jobs: |-
          jobs:
          - script: >
              folder('infrastructure')
          - script: >
              pipelineJob('infrastructure/reboot-plex') {
                definition {
                  cpsScm {
                    scriptPath('.pipelines/ansible/reboot-plex.Jenkinsfile')
                    scm {
                      git {
                        branch('*/main')
                        remote {
                          credentials('github-machine-user-ssh-key')
                          url('git@github.com:huttercloud/infrastructure.git')
                        }
                        extensions { }
                      }
                    }
                  }
                }
              }
        nodes: |-
          jenkins:
            nodes:
            - permanent:
                labelString: "node-a"
                nodeProperties:
                - envVars:
                    env:
                    - key: "PATH"
                      value: "/var/lib/jenkins/venv/bin:$PATH"
                launcher:
                  ssh:
                    credentialsId: "jenkinsci-ssh-key"
                    host: "node-a.hutter.cloud"
                    port: 22
                    sshHostKeyVerificationStrategy: "nonVerifyingKeyVerificationStrategy"
                mode: EXCLUSIVE
                name: "node-a.hutter.cloud"
                remoteFS: "/var/lib/jenkins"
                retentionStrategy: "always"
            - permanent:
                labelString: "node-b"
                nodeProperties:
                - envVars:
                    env:
                    - key: "PATH"
                      value: "/var/lib/jenkins/venv/bin:$PATH"
                launcher:
                  ssh:
                    credentialsId: "jenkinsci-ssh-key"
                    host: "node-b.hutter.cloud"
                    port: 22
                    sshHostKeyVerificationStrategy: "nonVerifyingKeyVerificationStrategy"
                mode: EXCLUSIVE
                name: "node-b.hutter.cloud"
                remoteFS: "/var/lib/jenkins"
                retentionStrategy: "always"
            - permanent:
                labelString: "node-c"
                nodeProperties:
                - envVars:
                    env:
                    - key: "PATH"
                      value: "/var/lib/jenkins/venv/bin:$PATH"
                launcher:
                  ssh:
                    credentialsId: "jenkinsci-ssh-key"
                    host: "node-c.hutter.cloud"
                    port: 22
                    sshHostKeyVerificationStrategy: "nonVerifyingKeyVerificationStrategy"
                mode: EXCLUSIVE
                name: "node-c.hutter.cloud"
                remoteFS: "/var/lib/jenkins"
                retentionStrategy: "always"
            - permanent:
                labelString: "plex"
                nodeProperties:
                - envVars:
                    env:
                    - key: "PATH"
                      value: "/var/lib/jenkins/venv/bin:$PATH"
                launcher:
                  ssh:
                    credentialsId: "jenkinsci-ssh-key"
                    host: "plex.hutter.cloud"
                    port: 22
                    sshHostKeyVerificationStrategy: "nonVerifyingKeyVerificationStrategy"
                    javaPath: "/opt/homebrew/opt/openjdk@11/bin/java"
                mode: EXCLUSIVE
                name: "plex.hutter.cloud"
                remoteFS: "/var/lib/jenkins"
                retentionStrategy: "always"
      securityRealm: |-
        oic:
          authorizationServerUrl: "https://hutter-cloud.eu.auth0.com/authorize"
          automanualconfigure: "auto"
          clientId: "${jenkins-auth0-client-clientId}"
          clientSecret: "${jenkins-auth0-client-clientSecret}"
          disableSslVerification: false
          emailFieldName: "email"
          fullNameFieldName: "name"
          logoutFromOpenidProvider: false
          overrideScopes: "openid email profile"
          overrideScopesDefined: true
          scopes: "openid profile email"
          tokenAuthMethod: "client_secret_post"
          tokenServerUrl: "https://hutter-cloud.eu.auth0.com/oauth/token"
          userInfoServerUrl: "https://hutter-cloud.eu.auth0.com/userinfo"
          userNameField: "email"
          wellKnownOpenIDConfigurationUrl: "https://hutter-cloud.eu.auth0.com/.well-known/openid-configuration"
    ingress:
      enabled: true
      apiVersion: networking.k8s.io/v1
      hostName: jenkins.hutter.cloud
      annotations:
        kubernetes.io/ingress.class: public
        cert-manager.io/cluster-issuer: letsencrypt-dns
      tls:
      - hosts: ["jenkins.hutter.cloud"]
        secretName: jenkins-tls
    resources:
      limits:
        cpu: 2000m
        memory: 4096Mi
  persistence:
    storageClass: persistent
    accessMode: ReadWriteMany
