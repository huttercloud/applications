
externalName:
  enabled: true

externalSecret:
  enabled: true

adminClusterRoleBinding:
  enabled: true

jenkins:
  controller:
    jenkinsAdminEmail: huttersebastian@gmail.com
    jenkinsUrlProtocol: https
    nstallPlugins:
    - kubernetes
    - workflow-aggregator
    - git
    - configuration-as-code
    additionalPlugins:
    - oic-auth
    - dotnet-sdk
    - kubernetes-credentials-provider
    - matrix-auth
    - github
    - aws-secrets-manager-credentials-provider
    # no secret source config, instead for jcasc i use kubernetes secrets
    #- aws-secrets-manager-secret-source
    - blueocean
    javaOpts: "-Xms4096m -Xmx4096m -XX:+UseG1GC -XX:+UseStringDeduplication -XX:MaxHeapFreeRatio=70 -XX:MinHeapFreeRatio=40"
    additionalExistingSecrets:
    # auth0 secrets are used in JCaSC configuration
    - name: jenkins-auth0-client
      keyName: clientId
    - name: jenkins-auth0-client
      keyName: clientSecret
    # extra env vars are used for aws secret source configuration
    # the aws secret manager configuration is us
    containerEnv:
    - name: AWS_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: jenkins-iam-secrets-manager
          key: accessKeyId
    - name: AWS_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: jenkins-iam-secrets-manager
          key: secretAccessKey
    - name: AWS_DEFAULT_REGION
      valueFrom:
        secretKeyRef:
          name: jenkins-iam-secrets-manager
          key: defaultRegion
    JCasC:
      configScripts:
        tool-configuration: |-
          tool:
            cmtool:
              installations:
              - home: "cm"
                name: "Default"
                properties:
                - installSource:
                    installers:
                    - cm:
                        ignoreSystemTool: true
                useInvariantCulture: true
            dotNetConfiguration:
              buildAllowed: true
              cleanAllowed: true
              listPackageAllowed: true
              nuGetDeleteAllowed: true
              nuGetLocalsAllowed: true
              nuGetPushAllowed: true
              packAllowed: true
              publishAllowed: true
              restoreAllowed: true
              telemetryOptOut: true
              testAllowed: true
              toolRestoreAllowed: true
            dotnetsdk:
              installations:
              - name: "net7"
                properties:
                - installSource:
                    installers:
                    - installDotNetSDK:
                        release: "7.0.2"
                        sdk: "7.0.102"
                        url: "https://download.visualstudio.microsoft.com/download/pr/c646b288-5d5b-4c9c-a95b-e1fad1c0d95d/e13d71d48b629fe3a85f5676deb09e2d/dotnet-sdk-7.0.102-linux-x64.tar.gz"
                        version: ".NET 7.0"
              - name: "net6"
                properties:
                - installSource:
                    installers:
                    - installDotNetSDK:
                        release: "6.0.13"
                        sdk: "6.0.405"
                        url: "https://download.visualstudio.microsoft.com/download/pr/c7f21771-9b09-4c81-883b-90dff8760c1e/fe992d38a94cc6f301c0236db3920c0a/dotnet-sdk-6.0.405-linux-x64.tar.gz"
                        version: ".NET 6.0"
            git:
              installations:
              - home: "git"
                name: "Default"
            mavenGlobalConfig:
              globalSettingsProvider: "standard"
              settingsProvider: "standard"
      securityRealm: |-
        oic:
          authorizationServerUrl: "https://hutter-cloud.eu.auth0.com/authorize"
          automanualconfigure: "auto"
          clientId: "${jenkins-auth0-client-clientId}"
          clientSecret: "${jenkins-auth0-client-clientSecret}"
          disableSslVerification: false
          emailFieldName: "email"
          fullNameFieldName: "name"
          logoutFromOpenidProvider: false
          overrideScopes: "openid email profile"
          overrideScopesDefined: true
          scopes: "openid profile email"
          tokenAuthMethod: "client_secret_post"
          tokenServerUrl: "https://hutter-cloud.eu.auth0.com/oauth/token"
          userInfoServerUrl: "https://hutter-cloud.eu.auth0.com/userinfo"
          userNameField: "email"
          wellKnownOpenIDConfigurationUrl: "https://hutter-cloud.eu.auth0.com/.well-known/openid-configuration"
    ingress:
      enabled: true
      apiVersion: networking.k8s.io/v1
      hostName: jenkins.hutter.cloud
      annotations:
        kubernetes.io/ingress.class: public
        cert-manager.io/cluster-issuer: letsencrypt-dns
      tls:
      - hosts: ["jenkins.hutter.cloud"]
        secretName: jenkins-tls
    resources:
      limits:
        cpu: 2000m
        memory: 4096Mi
  persistence:
    storageClass: persistent
    accessMode: ReadWriteMany
