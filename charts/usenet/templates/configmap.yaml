##
# configmap for the landing page
##
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-homepage
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
    <title>Welcome to usenet.hutter.cloud!</title>
    <style>
        body {
            width: 35em;
            margin: 0 auto;
            font-family: Tahoma, Verdana, Arial, sans-serif;
        }
    </style>
    </head>

    <body>

    <h1>Welcome to hutter.cloud!</h1>
    <p>
    You can access the following services - if you have the necessary credentials.
    </p>

    <h2>usenet</h2>
    <h3>movies and series</h3>
    <p>
    <a href="https://{{ .Values.ingress.host }}/radarr/">Radarr - movies</a></br>
    <a href="https://{{ .Values.ingress.host }}/sonarr/">Sonarr - tv series</a></br>
    <a href="https://{{ .Values.ingress.host }}/bazarr/">Bazarr - subtitles</a></br>
    </p>
    <h3>manual search and download</h3>
    <p>
    <a href="https://{{ .Values.ingress.host }}/nzbhydra2/">nzbhydra2 - manual usenet search</a></br>
    <a href="https://{{ .Values.ingress.host }}/browser/">browse downloaded items and plex library</a></br>
    </p>
    <h3>downloader</h3>
    <p>
    <a href="https://{{ .Values.ingress.host }}/sabnzbd/">Sabnzbd</a></br>
    </p>
    </body>
    </html>

##
# simple cleanup script
##
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-sabnzbd-cleanup
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
data:
  script.sh: |
    #!/bin/sh
    find /downloads -type f -mtime +3 -delete
    find /incomplete-downloads -type f -mtime +3 -delete
##
# nzbtomedia init script
##
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-nzbtomedia-init
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
data:
  script.sh: |
    #!/bin/sh

    # install and configure git
    apk add --no-cache git
    echo "autoProcessMedia.cfg" > /.gitignore
    git config --global core.excludesfile /.gitignore

    # check if there is already a checkout for nzbToMedia
    if [ ! -d /nzbtomedia/nzbToMedia ]; then
        cd /nzbtomedia
        git clone https://github.com/clinton-hall/nzbToMedia.git
    fi

    # setup specified version
    cd /nzbtomedia/nzbToMedia
    git fetch -a
    git checkout {{ .Values.nzbtomedia.version }}

    # copy configuration file if one exists in volume
    if [ -f /nzbtomedia/autoProcessMedia.cfg ]; then
        cp -f /nzbtomedia/autoProcessMedia.cfg /nzbtomedia/nzbToMedia/autoProcessMedia.cfg
    fi

    # ensure download folders arent included in backup
    touch /incomplete-downloads/.nobackup
    touch /downloads/.nobackup

##
# nzbtomedia init script
##
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-file-browser-init
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
data:
  script.sh: |
    #!/bin/sh

    cd /config

    # check if db file needs to be created
    if [ ! -f database.db ]; then
        touch database.db
    fi

    if [ ! -f .filebrowser.json ]; then
        echo CnsKICAicG9ydCI6IDgwLAogICJiYXNlVVJMIjogIiIsCiAgImFkZHJlc3MiOiAiIiwKICAibG9nIjogInN0ZG91dCIsCiAgImRhdGFiYXNlIjogIi9kYXRhYmFzZS5kYiIsCiAgInJvb3QiOiAiL3NydiIKfQoK | base64 -d > .filebrowser.json
    fi
