##
# configmap for the landing page
##
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-homepage
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
data:
  index.html: |
    {{ .Files.Get "usenet-index.html" | nindent 4 }}

##
# simple cleanup script
##
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-sabnzbd-cleanup
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
data:
  script.sh: |
    #!/bin/sh
    # delete old files
    find /downloads -mindepth 2 -type f -mtime +3 -delete
    find /incomplete-downloads -mindepth 2 -type f -mtime +1 -delete
    # delete empty directories in downloads
    find /downloads -mindepth 2 -empty -type d -delete
##
# nzbtomedia init script
##
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-nzbtomedia-init
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
data:
  script.sh: |
    #!/bin/sh

    # install and configure git
    apk add --no-cache git
    echo "autoProcessMedia.cfg" > /.gitignore
    git config --global core.excludesfile /.gitignore

    # check if there is already a checkout for nzbToMedia
    if [ ! -d /nzbtomedia/nzbToMedia ]; then
        cd /nzbtomedia
        git clone https://github.com/clinton-hall/nzbToMedia.git
    fi

    # setup specified version
    cd /nzbtomedia/nzbToMedia
    git fetch -a
    git checkout {{ .Values.nzbtomedia.version }}

    # copy configuration file if one exists in volume
    if [ -f /nzbtomedia/autoProcessMedia.cfg ]; then
        cp -f /nzbtomedia/autoProcessMedia.cfg /nzbtomedia/nzbToMedia/autoProcessMedia.cfg
    fi

    # setup permissions for nzbtomedia folder
    uid=$(id -u abc)
    gid=$(id -g abc)
    chown -R ${uid}:${gid} /nzbtomedia/nzbToMedia

    # ensure download folders arent included in backup
    touch /incomplete-downloads/.nobackup
    touch /downloads/.nobackup
